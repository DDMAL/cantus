{
  "_args": [
    [
      {
        "hosted": {
          "directUrl": "https://raw.githubusercontent.com/DDMAL/diva.js/v4.1.0/package.json",
          "gitUrl": "git://github.com/DDMAL/diva.js.git#v4.1.0",
          "httpsUrl": "git+https://github.com/DDMAL/diva.js.git#v4.1.0",
          "shortcut": "github:DDMAL/diva.js#v4.1.0",
          "ssh": "git@github.com:DDMAL/diva.js.git#v4.1.0",
          "sshUrl": "git+ssh://git@github.com/DDMAL/diva.js.git#v4.1.0",
          "type": "github"
        },
        "name": "diva.js",
        "raw": "diva.js@git://github.com/DDMAL/diva.js.git#v4.1.0",
        "rawSpec": "git://github.com/DDMAL/diva.js.git#v4.1.0",
        "scope": null,
        "spec": "git://github.com/DDMAL/diva.js.git#v4.1.0",
        "type": "hosted"
      },
      "/Users/jeromepl/Documents/Code/cantus/public/cantusdata/frontend/public"
    ]
  ],
  "_from": "git://github.com/DDMAL/diva.js.git#v4.1.0",
  "_id": "diva.js@4.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/diva.js",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/DDMAL/diva.js/v4.1.0/package.json",
      "gitUrl": "git://github.com/DDMAL/diva.js.git#v4.1.0",
      "httpsUrl": "git+https://github.com/DDMAL/diva.js.git#v4.1.0",
      "shortcut": "github:DDMAL/diva.js#v4.1.0",
      "ssh": "git@github.com:DDMAL/diva.js.git#v4.1.0",
      "sshUrl": "git+ssh://git@github.com/DDMAL/diva.js.git#v4.1.0",
      "type": "github"
    },
    "name": "diva.js",
    "raw": "diva.js@git://github.com/DDMAL/diva.js.git#v4.1.0",
    "rawSpec": "git://github.com/DDMAL/diva.js.git#v4.1.0",
    "scope": null,
    "spec": "git://github.com/DDMAL/diva.js.git#v4.1.0",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/DDMAL/diva.js.git#c11cd1317f4c6cedc147c12008ba2aee211d0472",
  "_shasum": "15c56fd92c69816a70bcaeb6d8338fb0c6f36c06",
  "_shrinkwrap": null,
  "_spec": "diva.js@git://github.com/DDMAL/diva.js.git#v4.1.0",
  "_where": "/Users/jeromepl/Documents/Code/cantus/public/cantusdata/frontend/public",
  "author": {
    "name": "Andrew Hankinson"
  },
  "bugs": {
    "url": "https://github.com/DDMAL/diva.js/issues"
  },
  "contributors": [
    {
      "name": "Evan Magoni"
    },
    {
      "name": "Wendy Liu"
    },
    {
      "name": "Andrew Horwitz"
    },
    {
      "name": "Laurent Pugin"
    }
  ],
  "dependencies": {
    "jquery": "~2.1.1"
  },
  "description": "Diva.js is a JavaScript document image viewer designed to present multi-page documents at high resolutions.",
  "devDependencies": {
    "archiver": "^0.14.4",
    "chalk": "^0.5.1",
    "connect": "^3.3.5",
    "connect-livereload": "^0.5.3",
    "del": "^1.2.0",
    "gulp": "^3.9.0",
    "gulp-concat": "^2.5.2",
    "gulp-jshint": "^1.11.0",
    "gulp-less": "^3.0.3",
    "gulp-livereload": "^3.8.0",
    "gulp-load-plugins": "^1.0.0-rc.1",
    "gulp-rename": "^1.2.2",
    "gulp-sourcemaps": "^1.5.2",
    "gulp-uglify": "^1.2.0",
    "gulp-util": "^3.0.0",
    "jshint-stylish": "^2.0.0",
    "less": "~2.4.0",
    "phantomjs-prebuilt": "^2.1.3",
    "serve-index": "^1.7.0",
    "serve-static": "^1.9.3",
    "through2": "^0.6.1",
    "yargs": "^3.11.0"
  },
  "directories": {
    "test": "tests"
  },
  "gitHead": "c11cd1317f4c6cedc147c12008ba2aee211d0472",
  "homepage": "https://github.com/DDMAL/diva.js",
  "jspm": {
    "files": [
      "build"
    ],
    "ignore": [
      "gulpfile.js"
    ]
  },
  "keywords": [
    "images",
    "iip",
    "documents",
    "libraries",
    "archives"
  ],
  "license": "MIT",
  "main": "build/js/diva.min.js",
  "name": "diva.js",
  "optionalDependencies": {},
  "readme": "<p align=\"center\">\n  <a href=\"http://ddmal.github.io/diva.js\">\n    <img width=\"382\" height=\"191\" src=\"https://github.com/DDMAL/diva.js/wiki/img/diva-logo-sm.png\" />\n  </a>\n</p>\nDiva.js [![Build Status](https://travis-ci.org/DDMAL/diva.js.svg?branch=master)](http://travis-ci.org/DDMAL/diva.js) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/DDMAL/diva.js?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n=========================================\n\nDiva.js (Document Image Viewer with AJAX) is a JavaScript book image viewer designed to present multi-page documents at multiple resolutions.\n\nVersion 4.0 contains many new features and improvements:\n\n * [International Image Interoperability Framework](http://iiif.io) (IIIF) support\n * Book Layout view (facing pages)\n * New plugins: Autoscroll (animated page scrolling), Page Alias (pages may have multiple identifiers), IIIF Metadata (displays document metadata from IIIF manifest), IIIF Highlight (displays annotations from a IIIF manifest)\n * Improved development workflow ([Gulp](https://github.com/gulpjs/gulp))\n * Support for changing which document is being viewed without re-instantiating the viewer\n * Numerous bug fixes and optimizations (See our [commits](https://github.com/DDMAL/diva.js/commits/master) for more details).\n\n## Overview\n\nThere are two components to a functioning Diva system:\n\n1. **An image server.** Either [IIP Image Server](http://iipimage.sourceforge.net) with Diva's JSON measurement data file or [any other IIIF-compatible image server](http://iiif.io/apps-demos.html).\n2. **The Diva.js jQuery plugin.** The embedded web application that displays the images in a browser.\n\nIf using IIP, your document image files must be processed into either Pyramid TIFF or JPEG2000 format. We provide [a script](https://github.com/DDMAL/diva.js/wiki/Preparing-Your-Images) to easily do this.\n\n### Details\n\n#### If using IIIF\nDiva.js is an image viewing client compatible with version 2.0 of the IIIF [Image](http://iiif.io/api/image/2.0/) and [Presentation](http://iiif.io/api/presentation/2.0/) APIs. Simply supply the path to a valid IIIF Manifest and Diva will display the document as described by the metadata (see [Installing](#installing)).\n\n#### If using IIP\nIIP creates the image tiles and other image representations \"on the fly\". Instructions for building and installing IIP are available on the [project's website](http://iipimage.sourceforge.net/documentation/server/). If you want to support JPEG 2000 you will either need to download a pre-compiled version (available on the [Old Maps Online site](http://help.oldmapsonline.org/jpeg2000/installation)) or [purchase the Kakadu libraries](http://www.kakadusoftware.com) and build it yourself.\n\nDiva relies on a JavaScript Object Notation (JSON) file that contains data about your document. This JSON file is automatically generated when you use the image conversion scripts that we distribute with Diva. These files can be served using a regular web server.\n\nThere are two image formats supported by IIP: Pyramid TIFF and, with the inclusion of the Kakadu libraries, JPEG2000. These formats support multiple file resolutions and image tiling. \n\n## Installing\n\nDownload the [latest release](https://github.com/DDMAL/diva.js/releases) of Diva. In the `diva.js` directory (or `build` if you have the source code) you can find a pre-compiled version of Diva. The `css`, `js` and `img` directories contain the files necessary to use Diva. You will also find a number of demos and some helper scripts for processing your image files.\n\nThe most basic Diva viewer is instantiated with three (IIP) or one (IIIF) required parameter(s):\n\n```javascript\n\n$('#diva-wrapper').diva({\n    iipServerURL: \"http://www.example.com/fcgi-bin/iipsrv.fcgi\",\n    objectData: \"http://www.example.com/beromunster.json\",\n    imageDir: \"/mnt/images/beromunster\"\n});\n```\n\nRequired for IIP and IIIF:\n * `objectData`: The URL (absolute or relative) to the document's `.json` file, or a IIIF Manifest\n \nRequired for IIP:\n * `iipServerURL`: The URL to your IIP installation. In most cases this should point to the iipsrv.fcgi file;\n * `imageDir`: Either the absolute path to your images on your server, OR the path relative to your IIP installation's [`FILESYSTEM_PREFIX`](http://iipimage.sourceforge.net/documentation/server/) configuration option.\n\nThe `#diva-wrapper` selector points to a `div` element within which the document viewer will appear.\n\nSee [Installation](https://github.com/DDMAL/diva.js/wiki/Installation) for full instructions.\n\n### Running the Demos\n\nRunning the demos works best using a web server. The easiest is to use Python to start a small web server in the `diva.js` directory (or `build` if you have the source code):\n\n```\n$> cd diva-v3.0.0/diva.js/ # (or cd diva.js/build)\n$> python -m SimpleHTTPServer\nServing HTTP on 0.0.0.0 port 8000 ...\n```\nYou may then load the demos in your web browser by visiting `http://localhost:8000` in your browser.\n\n## Building from source\n\nIf you wish to install from source, you can check out the code from [our GitHub repository](http://github.com/DDMAL/diva.js) or `npm install diva.js`. Once you've obtained the code, change to the project directory and run `npm install` to fetch development dependencies.\n\nThe full installation gives you access to the un-minified JavaScript source, the plugins, the documentation, and our unit-tests. We use [gulp](http://gulpjs.com/) as our build system and for other development tasks.\n\n```\ngulp develop          // Runs a webserver at localhost:9001 and automatically builds and reloads upon changes\ngulp develop:build    // Compiles the Javascript and LESS source and places it in the build/ directory\ngulp develop:test     // Runs the unit tests and outputs a report to the console\n```\n\nSee [Installation](https://github.com/DDMAL/diva.js/wiki/Installation) for more information.\n\n### Cross-site Requests\n\nYou may receive an error that looks something like this:\n\n```\nXMLHttpRequest cannot load http://example.com/demo/imagefiles.json. No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:8000' is therefore not allowed access.\n```\n\nThis is a security precaution that all browsers use to prevent cross-site request forgeries. If you receive this message it is because your `objectData` parameter and the server used to serve the Diva page are not at the same server address.\n\nTo fix this you must ensure that the Diva HTML page, and the location pointed to by the `objectData` page are being served by the same server, or you must create an exception using the `Access-Control-Allow-Origin` header on your server to explicitly white-list the `objectData` location.\n\n\n### Getting help\n\nHelp for diva.js is available through this repository's [wiki](https://github.com/DDMAL/diva.js/wiki), in the form of code documentation, installation instructions and usage tips.\n\nLet Us Know\n-----------\n\nWe're developing Diva.js as part of our research in [Distributed Digital Music Libraries](http://ddmal.music.mcgill.ca). If you use it in your project, it would be great if you could [let us know](mailto:andrew.hankinson@mail.mcgill.ca).\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/DDMAL/diva.js.git"
  },
  "scripts": {
    "test": "gulp develop:test"
  },
  "version": "4.1.0"
}
