@use "sass:color";

// Colors
$gray-darker: color.adjust(#000, $lightness: 13.5%); // #222
$gray-dark: color.adjust(#000, $lightness: 20%); // #333
$gray: #6f6f6f; // #555
$gray-light: color.adjust(#000, $lightness: 60%); // #999
$gray-lighter: color.adjust(#000, $lightness: 93.5%); // #eee

$brand-primary: #c2342e;
$brand-success: #43ac6a;
$brand-info: #5bc0de;
$brand-warning: #E99002;
$brand-danger: #F04124;

// Override global font family
$font-family-base: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;

//Bootstrap colors
$bootstrap-blue: #337ab7;

// Global textual link color.
$link-color: $brand-primary;
$link-hover-color: color.adjust($link-color, $lightness: -15%);
$link-decoration: none;
$link-hover-decoration: underline;

// Override default padding for the navbar
$navbar-padding-y: 0em;
$navbar-toggler-padding-y: 0rem;
$navbar-toggler-focus-width: 0rem;

// Accordion variables
$accordion-button-color: $gray-dark;
$accordion-button-bg: #f5f5f5;
$accordion-button-active-color: $accordion-button-color;
$accordion-button-active-bg: $accordion-button-bg;
$accordion-button-padding-y: .8rem;
// Hover variables are used in class declaration below
$accordion-button-hover-color: $brand-primary;
$accordion-button-hover-bg: #fcfcfc;

// Override accordion button styles
$accordion-button-focus-border-color: none;
$accordion-button-focus-box-shadow: none;
$accordion-button-icon: none;
$accordion-button-active-icon: none;

// Color used for a lot of borders in the Bootstrap things
$border-color: #ddd;

$body-font-weight: 300;

$navbar-dark-toggler-icon-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 1%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");

@import "variables";
@import "bootstrap/scss/bootstrap";
@import "bootswatch";
@import "sidenav";

$zindex-diva-fullscreen: $zindex-modal;
$zindex-diva-canvas: $zindex-diva-fullscreen + 5;

// Volpiano font
@font-face {
    font-family: 'Volpiano';
    src: url('/static/fonts/volpiano.eot'); // IE9 Compat Modes
    src: url('/static/fonts/volpiano.eot?#iefix') format('embedded-opentype'), // IE6-IE8
        url('/static/fonts/volpiano.woff') format('woff'), // Modern Browsers
        url('/static/fonts/volpiano.ttf') format('truetype'), // Safari, Android, iOS
        url('/static/fonts/volpiano.svg#a7a4d8715938a922c6a8c6587abbdcd3') format('svg'); // Legacy iOS

    font-style: normal;
    font-weight: 400;
}

// This is textual information, so we want to make it resemble normal text as much as possible
pre.preformatted-text {
    border: inherit;
    background: none;

    padding: 0;

    white-space: pre-wrap;
    word-break: normal;

    // Inherit font properties to match wherever we drop it
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
    color: inherit;
}

.no-js-message .container,
.no-js-message .logos {
    padding-top: 25px;
}

.no-js-message .logos {
    max-width: 60%;
}

#manuscript-info-target {
    float: right;

    // FIXME: This should actually be the padding for all .btn-sm elements; the Bootstrap button padding was
    // inconsistently tweaked
    .btn-sm {
        padding: 5px 10px;
    }
}

.manuscript-info-sidenav-container .sidenav {
    @include sidenav-size($width: 350px, $position: right);
}

.manuscript-info {
    padding: 0 15px;

    dl {
        margin-bottom: 0;
    }
}

#manuscript-nav-container {
    // Subtract 1px from margins so that the borders are flush with the container's
    margin-top: -1px;
    margin-left: -1px;
}

.volpiano,
.field-volpiano,
.field-volpiano_literal {
    font-family: 'Volpiano';
    font-size: 22pt;
    line-height: 2.5em;
}

// Volpiano in the serach results needs extra margin
.result-list .volpiano {
    margin-bottom: 20px;
}

// For the volpiano in the quick view section, a few adjustments are necessary
// in order for the volpiano and its text underlay to be displayed properly
.full-result-record-content .volpiano {
    overflow: hidden; // Make the parent take the height of the volpiano which is floating
    padding-bottom: 7px; // Avoid cropping the bottom of the text underlay
}

.volpiano-syllable {
    display: inline-block;
    position: relative;
}

.volpiano-text {
    font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 10px;
    margin-top: 35px;
    position: absolute;
    left: 0;
}

.volpiano-text-lg {
    font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 15px;
    margin-top: 35px;
    margin-bottom: 35px;
    position: absolute;
    left: 0;
}

.volpiano-text-serif {
    font-family: "Georgia", serif;
    font-size: 15px;
    margin-top: 35px;
    position: absolute;
    left: 0;
}

.field-volpiano,
.field-volpiano_literal {
    color: #333;
}

.field-volpiano.search-text-entered,
.field-volpiano_literal.search-text-entered {
    height: 2em;
    padding-top: 0;
    padding-bottom: 0;
}

.field-volpiano::placeholder,
.field-volpiano_literal::placeholder {
    font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 15px;
}

// We only need to set the line height on webkit, since it renders differently
// than other browsers
.field-volpiano::-webkit-input-placeholder,
.field-volpiano_literal::-webkit-input-placeholder {
    line-height: 1.42857143;
}

.result-list {
    > thead > tr > th {
        white-space: nowrap;
        overflow: hidden;
        position: sticky;
        top: 0;
        background-color: white;
        z-index: 1;

        // Make table headers black in the search result list, even though they're links
        a {
            color: inherit;
        }
    }

    > tbody > tr > td {
        // Hide the top border since the <tbody> acts as a delimiter
        border-top: 0;
    }
}

.accordion-button:hover {
    background-color: $accordion-button-hover-bg;
    color: $accordion-button-hover-color;
}

.well {
    background-color: #fafafa;
    border: 1px solid #e8e8e8;
    border-radius: 0;
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);
}

.result-table-wrapper {
    min-height: 200px;
}

// Support reversible (i.e. upwards-pointing) carets without setting classes on ancestors
.caret.caret-reversed {
    content: "";
    border-top: 0;
    border-bottom: 4px solid;
}

// When applied to ancestors of a nested element, this class uses flexbox to set the height
// of the element to the remaining height of the viewport.
.propagate-height,
.modal-content,
.modal-body {
    display: flex;
    flex-direction: column;
    flex-grow: 1;

    > .propagate-height,
    > .result-table-wrapper,
    > .modal-body {
        flex-shrink: 1;
        overflow: auto;
    }

    > .row {
        margin-right: 0px;
        margin-left: 0px;
    }
}

body.propagate-height {
    height: 100vh;
}

.manuscript-columns {
    &.propagate-height {
        flex-direction: row;
    }

    // Distribute width to the columns equally by default,
    // allocating more for the Diva column on large screens
    > * {
        width: 50%;
    }

    @include media-breakpoint-up(lg) {
        > :first-child {
            width: 60%;
        }

        > :last-child {
            width: 40%;
        }
    }
}

.modal-dialog {
    max-width: 90%;
    width: 50%;
    height: 90%;
}

.modal-content {
    height: 100%;
}

.modal-header {
    min-height: auto;
}

#manuscript-data-container {
    // Relative-position the container so that percentage-based dimensions are calculated relative to it
    position: relative;
}

.resizer {
    cursor: col-resize;
    height: 100%;
    width: 10px;
    background-color: transparent;
    position: absolute;

    // Kind of arbitrarily slot this into the Bootstrap hierarchy
    z-index: $zindex-dropdown;

    .prong {
        position: relative;
        top: 45%;
        float: left;
        margin-left: 3px;

        height: 25px;
        width: 2px;

        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
        background-color: #bbb;

        + .prong {
            margin-left: 1px;
        }
    }
}

.dragging-overlay {
    position: fixed;

    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    z-index: $zindex-modal-backdrop;

    &.col-resize-cursor {
        cursor: col-resize;
    }
}

.diva-tools {
    margin-top: 0;
    padding: 20px 15px;
    min-height: 70px;
    border-right: 1px solid $border-color;
    border-bottom: 1px solid $border-color;

    .diva-button {
        border-color: #DADADA;
        background-color: #E7E7E7;
        height: 30px;

        &:hover {
            border-color: #BBB;
            background-color: #D3D3D3;
        }

        &.diva-button-text {
            line-height: 30px;
        }
    }

    .diva-buttons-label,
    .diva-page-label {
        padding: 5px 10px !important;
        line-height: 1.5 !important;
        margin: 0;
    }

    .diva-goto-form,
    .diva-input {
        line-height: inherit;
    }

    .diva-input {
        height: 30px;
        border-color: #c6c6c6;
    }
}

.diva-tools.diva-fullscreen-tools {
    width: auto;
    min-width: 260px;
    height: 120px;
    padding: 10px;

    .diva-buttons-label,
    .diva-page-label,
    .diva-page-nav {
        padding-left: 0 !important;
        padding-right: 0 !important;
    }

    // Hide the extra button that was stuck into the Diva toolbar
    #manuscript-info-target {
        display: none;
    }
}

.diva-outer {
    border: none;
    border-right: 1px solid $border-color;
    min-width: 0;
}

// Integrate Diva z-index values with the Bootstrap z-index hierarchy
.diva-outer.diva-fullscreen {
    z-index: $zindex-diva-fullscreen;
}

.diva-popup,
.diva-tools.diva-fullscreen-tools {
    z-index: $zindex-diva-fullscreen + 1;
}

#diva-canvas-backdrop {
    z-index: $zindex-diva-canvas;
}

#diva-canvas-wrapper {
    z-index: $zindex-diva-canvas + 1;
}

#diva-canvas {
    z-index: $zindex-diva-canvas + 2;
}

#diva-canvas-tools {
    z-index: $zindex-diva-canvas + 3;
}

#diva-canvas-toolbar div {
    z-index: $zindex-diva-canvas + 4;
}

.canvas-throbber {
    z-index: $zindex-diva-canvas + 5;
}

.search-input .form-control:focus {
    box-shadow: none;
    border-color: $border-color;
}

.search-field {
    padding-left: 15px;
}

.search-input .form-group {
    margin-bottom: 0;
}

.search-suggestions {
    position: absolute;
    background-color: white;
    z-index: 100;
}

.search-suggestions .list-group {
    margin: 0;
}

.search-suggestions .list-group-item.active,
.search-suggestions .list-group-item.active:hover {
    background-color: $bootstrap-blue;
    border-color: $bootstrap-blue;
}

.search-input-group {
    display: flex;
    flex-direction: row;
}

.search-field {
    flex-grow: 1;
}

.search-input-group {
    margin-bottom: 15px;
}

#manuscript-search {
    margin-top: 21px;
}

#menu-sidenav {
    color: #333;

    .sidenav-brand {
        display: block;
        color: inherit;
    }

    li > a {
        color: inherit;
        font-size: 15px;
    }

    li:hover {
        background-color: #eee;
        text-decoration: none;
    }

    .sidenav-brand:hover {
        text-decoration: none;
    }
}

.navbar-default {
    color: #fff;

    a {
        color: inherit;

        &:hover {
            text-decoration: none;
        }
    }

    .nav-link {
        font-size: .95rem;
        line-height: $navbar-brand-font-size * 1.5; // set this based on brand font-size so that
        // nav-link text is vertically centered
        // wrt the brand text
    }

    .nav-link:hover {
        background-color: #272727;
    }
}

.pager {
    a {
        font-size: 12px;
        font-weight: 300;
        padding-right: 1em;
        padding-left: 1em;
        border: 1px solid transparent;
        border-radius: 3px;

        &:hover {
            text-decoration: none;
            background-color: #eeeeee;
        }
    }
}

.nav-tabs.nav-justified {
    li a {
        background-color: #e7e7e7;
        color: #222222;

        .active {
            background-color: #ffffff;
            color: #6f6f6f;
            border: 1px solid #dddddd;
            border-bottom-color: #ffffff;
            cursor: default;

        }

        &:hover:not(.active) {
            background-color: #eeeeee;
            color: $brand-primary;
        }
    }
}

// A subhead is an extension of a navbar brand that works like a breadcrumb to title a specific page
.secondary-brand-component::before {
    content: "›";
    padding-right: 6px;
    padding-left: 6px;
}

.app-version {
    font-size: .6em;
}

@include media-breakpoint-down(sm) {

    // If there's a subhead and JS enhancements are supported then hide the
    // primary component on smaller screens
    html.js {
        .primary-brand-component {
            display: none;

            .no-subhead & {
                display: block;
            }
        }

        .secondary-brand-component {
            display: block;

            // Some quick and dirty overflow protection
            max-width: 70vw;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;

            // Hide the breadcrumb
            &::before {
                display: none;
            }
        }
    }
}

.navbar-toggler {
    border: none;
}

// Always display the collapse on smaller screens with no JS, rather than having it
// toggle. Inelegant, but it should work.
@include media-breakpoint-down(sm) {
    html.no-js .navbar-collapse {
        display: block;
    }
}

.neume-images img {
    background: #ccc;
}

.neume-gallery-container {
    display: flex;
    flex-wrap: nowrap;
    overflow: auto;
}

.neume-gallery-entry {
    transition: border-color 0.2s;
    float: left;
    max-width: 100px;
    min-width: 90px;
    margin: 5px;
    border: 1px solid $border-color;
    padding: 5px;
    color: $gray-darker;

    &:hover,
    &:focus {
        text-decoration: none;
        border-color: $link-color;
        color: $gray-darker;
    }

    .exemplar {
        height: 75px;
        margin: 4px;

        img {
            display: block;
            margin: auto;
            max-height: 75px;
            max-width: 75px;
        }
    }

    .caption {
        text-align: center;
        overflow: hidden;
        text-overflow: ellipsis;
        word-wrap: break-word;
    }
}

.displayed-query {
    color: #c2342e;
    font-weight: bold;
}

// Define switch element for toggling treble voice
.switch {
    position: relative;
    display: inline-block;
    width: 34px;
    height: 20px;
    margin-left: 15px;
    vertical-align: middle;
}

.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: $gray-light;
    transition: 0.4s;
    border-radius: 20px;
}

.slider:before {
    position: absolute;
    content: "";
    height: 14px;
    width: 14px;
    left: 3px;
    bottom: 3px;
    background-color: white;
    transition: 0.4s;
    border-radius: 50%;
}

input:checked + .slider {
    background-color: $gray-darker;
}

input:checked + .slider:before {
    transform: translateX(14px);
}

.slider.round {
    border-radius: 20px;
}

.slider.round:before {
    border-radius: 50%;
}

label[for="toggleTreble"] {
    margin-left: 6px;
    vertical-align: middle;
    font-weight: normal;
    font-size: 14px;
    color: $gray-dark;
    line-height: 20px;
}