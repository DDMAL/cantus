// Hardcode some Bootstrap style variables here since our Bootstrap stuff
// isn't pre-processed

// Responsive breakpoints
$screen-sm-min: 768px;
$screen-md-min: 992px;
$screen-lg-min: 1200px;
$grid-float-breakpoint: $screen-sm-min;

// Colors
$gray-darker:            lighten(#000, 13.5%); // #222
$gray-dark:              lighten(#000, 20%);   // #333
$gray:                   #6f6f6f; // #555
$gray-light:             lighten(#000, 60%);   // #999
$gray-lighter:           lighten(#000, 93.5%); // #eee

$brand-primary:         #c2342e;
$brand-success:         #43ac6a;
$brand-info:            #5bc0de;
$brand-warning:         #E99002;
$brand-danger:          #F04124;

//Bootstrap colors
$bootstrap-blue:        #337ab7;

//** Global textual link color.
$link-color:            $brand-primary;
$link-hover-color:      darken($link-color, 15%);

// Color used for a lot of borders in the Bootstrap things
$border-color: #ddd;

$zindex-navbar:            1000;
$zindex-dropdown:          1000;
$zindex-popover:           1010;
$zindex-tooltip:           1030;
$zindex-navbar-fixed:      1030;
$zindex-modal-background:  1040;
$zindex-modal:             1050;

$zindex-diva-fullscreen:   $zindex-modal;
$zindex-diva-canvas:       $zindex-diva-fullscreen + 5;

@import "sidenav";

// Volpiano font
@font-face {
  font-family: 'Volpiano';
  src: url('/static/fonts/volpiano.eot'); // IE9 Compat Modes
  src: url('/static/fonts/volpiano.eot?#iefix') format('embedded-opentype'), // IE6-IE8
       url('/static/fonts/volpiano.woff') format('woff'), // Modern Browsers
       url('/static/fonts/volpiano.ttf')  format('truetype'), // Safari, Android, iOS
       url('/static/fonts/volpiano.svg#a7a4d8715938a922c6a8c6587abbdcd3') format('svg'); // Legacy iOS

  font-style:   normal;
  font-weight:  400;
}


// This is textual information, so we want to make it resemble normal text as much as possible
pre.preformatted-text {
    border: inherit;
    background: none;

    padding: 0;

    white-space: pre-wrap;
    word-break: normal;

    // Inherit font properties to match wherever we drop it
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
    color: inherit;
}

.no-js-message .container, .no-js-message .logos {
    padding-top: 25px;
}

.no-js-message .logos {
    max-width: 60%;
}

#manuscript-info-target {
    float: right;

    // FIXME: This should actually be the padding for all .btn-sm elements; the Bootstrap button padding was
    // inconsistently tweaked
    .btn-sm {
        padding: 5px 10px;
    }
}

.manuscript-info-sidenav-container .sidenav {
    @include sidenav-size($width: 350px, $position: right);
}

.manuscript-info {
    padding: 0 15px;

    dl {
        margin-bottom: 0;
    }
}

#manuscript-nav-container {
    // Subtract 1px from margins so that the borders are flush with the container's
    margin-top: -1px;
    margin-left: -1px;
}

.volpiano, .field-volpiano, .field-volpiano_literal {
    font-family: 'Volpiano';
    font-size: 22pt;
    line-height: 2.5em;
}

// Volpiano in the serach results needs extra margin
.result-list .volpiano {
    margin-bottom: 20px;
}

// For the volpiano in the quick view section, a few adjustments are necessary
// in order for the volpiano and its text underlay to be displayed properly
.full-result-record-content .volpiano {
    overflow: hidden; // Make the parent take the height of the volpiano which is floating
    padding-bottom: 7px; // Avoid cropping the bottom of the text underlay
}

.volpiano-syllable {
    display: inline-block;
    position: relative;
}

.volpiano-text {
    font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 10px;
    margin-top: 35px;
    position: absolute;
    left: 0;
}

.volpiano-text-lg {
    font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 15px;
    margin-top: 35px;
    margin-bottom: 35px;
    position: absolute;
    left: 0;
}

.volpiano-text-serif{
    font-family: "Georgia", serif;
    font-size: 15px;
    margin-top: 35px;
    position: absolute;
    left: 0;
}

.field-volpiano, .field-volpiano_literal {
    color: #333;
}

.field-volpiano.search-text-entered, .field-volpiano_literal.search-text-entered {
    height: 2em;
    padding-top: 0;
    padding-bottom: 0;
}

.field-volpiano::placeholder, .field-volpiano_literal::placeholder {
    font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 15px;
}

// We only need to set the line height on webkit, since it renders differently
// than other browsers
.field-volpiano::-webkit-input-placeholder, .field-volpiano_literal::-webkit-input-placeholder {
    line-height: 1.42857143;
}

.chant-list-region .panel-heading {
    color: #333333;
    background-color: #f5f5f5;
    border-color: #dddddd;
    text-decoration: none;

    &:hover{
        background:#fcfcfc;
        color:#c2342e;
    }
}

.chant-list-region a:hover, a:focus{
    text-decoration: none;
}

.result-list {
    > thead > tr > th {
        white-space: nowrap;
        overflow: hidden;
        position: sticky;
        top: 0;
        background-color: white;
        z-index: 1;

        // Make table headers black in the search result list, even though they're links
        a {
            color: inherit;
        }
    }

    > tbody > tr > td {
        // Hide the top border since the <tbody> acts as a delimiter
        border-top: 0;
    }
}


//Override bootstrap in order to align the folio navigation buttons on the right
.pager.text-right {
    text-align: right;
}

.diva-folio-advancer-region .pager {
    margin: 8px;
}


.full-result-record {
    .content-enter,
    .content-exit {
        overflow: hidden;
        min-height: 0;
    }

    .content-enter {
        transition: max-height 600ms cubic-bezier(0.77, 0, 0.175, 1), padding 200ms;
    }

    .content-exit {
        transition: max-height 600ms cubic-bezier(0.77, 0, 0.175, 1), padding 200ms 400ms;
    }

    .content-enter,
    .content-exit.content-exit-active {
        max-height: 0;
    }

    .content-enter.content-enter-active,
    .content-exit {
        max-height: 900px;
    }

    .content-enter:not(.content-enter-active),
    .content-exit.content-exit-active {
        padding-top: 0;
        padding-bottom: 0;
    }
}

.full-result-record-content.well {
    padding-bottom: 0;
}

.result-table-wrapper {
    min-height: 200px;
}

// Support reversible (i.e. upwards-pointing) carets without setting classes on ancestors
.caret.caret-reversed {
    content: "";
    border-top: 0;
    border-bottom: 4px solid;
}

// When applied to ancestors of a nested element, this class uses flexbox to set the height
// of the element to the remaining height of the viewport.
.propagate-height, .modal-content, .modal-body {
    display: flex;
    flex-direction: column;
    flex-grow: 1;

    > .propagate-height, > .result-table-wrapper, > .modal-body {
        flex-shrink: 1;
        overflow:auto;
    }

    > .row {
        margin-right: 0px;
        margin-left:0px;
    }

    // Workaround for Bootstrap tabs
    .tab-content > &.tab-pane {
            display: none;

            &.active {
                display: flex;
            }
    }
}

body.propagate-height {
    height: 100vh;
}

.manuscript-columns {
    &.propagate-height {
        flex-direction: row;
    }

    // Distribute width to the columns equally by default,
    // allocating more for the Diva column on large screens
    > * {
        width: 50%;
    }

    @media (min-width: $screen-lg-min) {
        > :first-child {
            width: 60%;
        }

        > :last-child {
            width: 40%;
        }
    }
}

.modal-dialog {
    width: 50%;
    height: 90%;
}
.modal-content {
    height: 100%;
}
.modal-header{
    min-height:auto;
}

#manuscript-data-container {
    // Relative-position the container so that percentage-based dimensions are calculated relative to it
    position: relative;

    .resizer {
        position: absolute;
        cursor: col-resize;
        height: 100%;
        width: 10px;
        background-color: transparent;

        // Kind of arbitrarily slot this into the Bootstrap hierarchy
        z-index: $zindex-dropdown;

        .prong {
            position: relative;
            top: 45%;
            float: left;
            margin-left: 3px;

            height: 25px;
            width: 2px;

            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
            background-color: #bbb;

            + .prong {
                margin-left: 1px;
            }
        }
    }
}

.dragging-overlay {
    position: fixed;

    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    z-index: $zindex-modal-background;

    &.col-resize-cursor {
        cursor: col-resize;
    }
}

.diva-tools {
    margin-top: 0;
    padding: 20px 15px;
    min-height: 70px;
    border-right: 1px solid $border-color;
    border-bottom: 1px solid $border-color;

    .diva-button {
        border-color: #DADADA;
        background-color: #E7E7E7;
        height: 30px;

        &:hover {
            border-color: #BBB;
            background-color: #D3D3D3;
        }

        &.diva-button-text {
            line-height: 30px;
        }
    }

    .diva-buttons-label, .diva-page-label {
        padding: 5px 10px !important;
        line-height: 1.5 !important;
        margin: 0;
    }

    .diva-goto-form, .diva-input {
        line-height: inherit;
    }

    .diva-input {
        height: 30px;
        border-color: #c6c6c6;
    }
}

.diva-tools.diva-fullscreen-tools {
    width: auto;
    min-width: 260px;
    height: 120px;
    padding: 10px;

    .diva-buttons-label, .diva-page-label, .diva-page-nav {
        padding-left: 0 !important;
        padding-right: 0 !important;
    }

    // Hide the extra button that was stuck into the Diva toolbar
    #manuscript-info-target {
        display: none;
    }
}

.diva-outer {
    border: none;
    border-right: 1px solid $border-color;
    min-width: 0;
}

// Integrate Diva z-index values with the Bootstrap z-index hierarchy
.diva-outer.diva-fullscreen {
    z-index: $zindex-diva-fullscreen;
}
.diva-popup, .diva-tools.diva-fullscreen-tools {
    z-index: $zindex-diva-fullscreen + 1;
}

#diva-canvas-backdrop {
    z-index: $zindex-diva-canvas;
}
#diva-canvas-wrapper {
    z-index: $zindex-diva-canvas + 1;
}
#diva-canvas {
    z-index: $zindex-diva-canvas + 2;
}
#diva-canvas-tools {
    z-index: $zindex-diva-canvas + 3;
}
#diva-canvas-toolbar div {
    z-index: $zindex-diva-canvas + 4;
}
.canvas-throbber {
    z-index: $zindex-diva-canvas + 5;
}

.search-field {
    padding-left: 15px;
}

.search-input .form-group {
    margin-bottom: 0;
}

.search-suggestions {
    position: absolute;
    background-color: white;
    z-index: 100;
}

.search-suggestions .list-group {
    margin: 0;
}

.search-suggestions .list-group-item.active, .search-suggestions .list-group-item.active:hover{
    background-color: $bootstrap-blue;
    border-color: $bootstrap-blue;
}

.search-input-group {
    display: flex;
    flex-direction: row;
}

.search-field {
    flex-grow: 1;
}

.search-input-group {
    margin-bottom: 15px;
}

#manuscript-search {
    margin-top: 21px;
}

#menu-sidenav {
    .sidenav a {
        padding-left: 40px;
    }

    .nav li > a {
        color: #333;
    }
}

.sidenav-brand {
    display: block;
    margin-bottom: 22px;
    color: #333;

    &:hover, &:active, &.active {
        text-decoration: none;
        color: #333;
        background-color: #eee;
    }
}

// Navbar styling
// Select ancestors of .navbar-default to match the specificity of the Bootstrap styling
// TODO(wabain): See if this can be done using Bootstrap variables. nav-link-padding?

.navbar-default .navbar-brand, .sidenav-brand {
    height: 50px;
    padding: 15px 15px;
    font-size: 20px;
    line-height: 20px;

    // Get anchor elements within a brand to be styled like the brand
    a, a:hover, a:focus {
        color: inherit;
        text-decoration: none;
    }
}

// A subhead is an extension of a navbar brand that works like a breadcrumb to title a specific page
.secondary-brand-component::before {
    content: "›";
    padding-right: 15px;
    padding-left: 15px;
}

@media (max-width: $screen-sm-min - 1) {
    // If there's a subhead and JS enhancements are supported then hide the
    // primary component on smaller screens
    html.js {
        .primary-brand-component {
            display: none;

            .no-subhead & {
                display: block;
            }
        }

        .secondary-brand-component {
            display: block;

            // Some quick and dirty overflow protection
            max-width: 70vw;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;

            // Hide the breadcrumb
            &::before {
                display: none;
            }
        }
    }
}

.navbar-default .navbar-nav > li > a {
    padding-top: 15px;
    padding-bottom: 15px;
}

// Alter the toggle so that it is permanently pinned to the left of the brand
// TODO(wabain): use Bootstrap variables here
.navbar-toggle {
    display: block;
    float: left;

    // Margin equal to $navbar-padding-horizontal
    margin-right: 0;
    margin-left: 15px;//FIXME: use variable

    padding-top: 11px;
    padding-bottom: 11px;

    @media (min-width: $grid-float-breakpoint) {
        margin-right: 15px;
        margin-left: 0;
    }

    // Hide the toggle if JS is disabled, since we won't be able to use it anyway
    html.no-js & {
        display: none;
    }
}

// When JS is enabled, don't display the nav links on smaller screens
html.js {
    .navbar-nav {
        display: none;
    }

    @media (min-width: $screen-md-min) {
        .navbar-nav {
            display: block;
        }

        .navbar-toggle {
            display: none;
        }
    }
}

// Always display the collapse on smaller screens with no JS, rather than having it
// toggle. Inelegant, but it should work.
@media (max-width: $grid-float-breakpoint - 1) {
    html.no-js .navbar-collapse {
        display: block;
    }
}

.neume-images img {
    background: #ccc;
}

.neume-gallery-entry {
    transition: border-color 0.2s;
    float: left;
    max-width: 100px;
    min-width: 90px;
    margin: 5px;
    border: 1px solid $border-color;
    padding: 5px;
    color: $gray-darker;

    &:hover, &:focus {
        text-decoration: none;
        border-color: $link-color;
        color: $gray-darker;
    }

    .exemplar {
        height: 75px;
        margin: 4px;

        img {
            display: block;
            margin: auto;
            max-height: 75px;
            max-width: 75px;
        }
    }

    .caption {
        text-align: center;
        overflow: hidden;
        text-overflow: ellipsis;
        word-wrap: break-word;
    }
}

.displayed-query{
    color: #c2342e;
    font-weight: bold;
}

// Define switch element for toggling treble voice
.switch {
    position: relative;
    display: inline-block;
    width: 34px;
    height: 20px;
    margin-left: 15px;
    vertical-align: middle;
}

.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: $gray-light;
    transition: 0.4s;
    border-radius: 20px;
}

.slider:before {
    position: absolute;
    content: "";
    height: 14px;
    width: 14px;
    left: 3px;
    bottom: 3px;
    background-color: white;
    transition: 0.4s;
    border-radius: 50%;
}

input:checked + .slider {
    background-color: $gray-darker;
}

input:checked + .slider:before {
    transform: translateX(14px);
}

.slider.round {
    border-radius: 20px;
}

.slider.round:before {
    border-radius: 50%;
}

label[for="toggleTreble"] {
    margin-left: 8px;
    vertical-align: middle;
    font-weight: normal;
    font-size: 14px;
    color: $gray-dark;
    line-height: 20px;
}