worker_processes 1;

user nobody nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead
error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /var/log/nginx/access.log combined;
  sendfile on;

  upstream gunicorn {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    # server unix:/tmp/gunicorn.sock fail_timeout=0;

    # for a TCP configuration
    server app:8001 fail_timeout=0;
  }

  upstream cantaloupe {
    server cantaloupe:8182;
  }
  
  server {
    # if no Host match, close the connection to prevent host spoofing
    listen 8000 default_server;
    return 444;
  }

  server {
    # use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD
    listen 8000;
    client_max_body_size 4G;

    # set the correct host(s) for your site
    server_name cantus.simssa.ca cantus.staging.simssa.ca dev-cantus.simssa.ca localhost;

    keepalive_timeout 5;

    # path for static files
    root /code;

    location ~ ^/iiif(/2)?(.*) {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
     
      proxy_redirect off;

      proxy_pass http://cantaloupe/iiif/2$2;
    }


    location /local_manifests {
      alias /code/manifests/;
    }

    location / {
      # checks for static file, if not found proxy to app
      try_files $uri django/$uri @proxy_to_app;
    }

    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;

      proxy_read_timeout 600;
      proxy_connect_timeout 600;
      proxy_send_timeout 600;

      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://gunicorn;
    }
  }
}
